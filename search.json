[{"path":[]},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement ernest@guevarra.io. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":[]},{"path":"https://oxford-ihtm.io/oxcgrt/CONTRIBUTING.html","id":"bugs","dir":"","previous_headings":"","what":"Bugs","title":"Contributing","text":"Submit issue issues page","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/CONTRIBUTING.html","id":"code-contributions","dir":"","previous_headings":"","what":"Code contributions","title":"Contributing","text":"Fork repository Github account Clone version account machine account Make sure track progress upstream .e., version oxcgrt OxfordIHTM/oxcgrt, making changes make sure pull changes upstream either git fetch upstream merge later git pull upstream fetch merge one step Make changes new feature branch Please write test tests changes affect code just documentation Push changes account Submit pull request como-ph/oxcgrt","code":"git clone https://github.com/<yourgithubusername>/oxcgrt.git git remote add upstream https://github.com/OxfordIHTM/oxcgrt.git"},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Ernest Guevarra  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. oxcgrt Copyright (C) 2020 Ernest Guevarra This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://oxford-ihtm.io/oxcgrt/articles/calculate.html","id":"calculating-oxcgrt-sub-indices","dir":"Articles","previous_headings":"","what":"Calculating OxCGRT sub-indices","title":"Calculate OxCGRT sub-indices and indices","text":"OxCGRT subindices can calculated using calculate_subindex calculate_subindices functions. calculate specific sub-index, following code used: gives C1 index value : calculate OxCGRT subindices, following code used: results following output: can noted results calculations added input data.frame column name score.1. Comparing value column named score included indicatorData dataset, results .","code":"## Given the C1 data in indicatorData, calculate C1 sub-index calculate_subindex(indicator_code = indicatorData[1, \"indicator\"],                     value = indicatorData[1, \"value\"],                     flag_value = indicatorData[1, \"flag_value\"]) #>      value #> 1 66.66667 ## Given the indicatorData dataset, calculate all sub-indices indicatorData |>   calculate_subindices(indicator_code = \"indicator\",                         value = \"value\",                         flag_value = \"flag_value\",                        add = TRUE) #> # A tibble: 16 × 7 #>    indicator value flag_value max_value  flag score score.1 #>    <chr>     <int>      <int>     <int> <int> <dbl>   <dbl> #>  1 C1            2          1         3     1  66.7    66.7 #>  2 C2           NA         NA         3     1   0       0   #>  3 C3            2          0         2     1  75      75   #>  4 C4            2          0         4     1  37.5    37.5 #>  5 C5            0         NA         2     1   0       0   #>  6 C6            1          0         3     1  16.7    16.7 #>  7 C7            1          1         2     1  50      50   #>  8 C8            3         NA         4     0  75      75   #>  9 E1            2          0         2     1  75      75   #> 10 E2            2         NA         2     0 100     100   #> 11 H1            2          0         2     1  75      75   #> 12 H2            3         NA         3     0 100     100   #> 13 H3            2         NA         2     0 100     100   #> 14 H6            2          0         4     1  37.5    37.5 #> 15 H7            2          1         5     1  40      40   #> 16 H8            2          1         3     1  66.7    66.7"},{"path":"https://oxford-ihtm.io/oxcgrt/articles/calculate.html","id":"calculating-oxcgrt-indices","dir":"Articles","previous_headings":"Calculating OxCGRT sub-indices","what":"Calculating OxCGRT indices","title":"Calculate OxCGRT sub-indices and indices","text":"OxCGRT indices can calculated using calculate_index calculate_indices functions. calculate specific sub-index, following code can used: code calculates government response index : result can reached using specialised function calculate_gov_response follows: results value previous code: calculate four OxCGRT indices, following code can implemented: outputs following results:","code":"indicatorData |>   calculate_subindices(indicator_code = \"indicator\",                        value = \"value\",                        flag_value = \"flag_value\",                        add = FALSE) |>   calculate_index(codes = c(paste(\"C\", 1:8, sep = \"\"),                             paste(\"E\", 1:2, sep = \"\"),                             paste(\"H\", 1:3, sep = \"\"),                             paste(\"H\", 6:8, sep = \"\")),                    tolerance = 1) #> [1] 57.1875 indicatorData |>    calculate_subindices(indicator_code = \"indicator\",                        value = \"value\",                        flag_value = \"flag_value\",                        add = FALSE) |>   calculate_gov_response() #> [1] 57.1875 indicatorData |>    calculate_subindices(indicator_code = \"indicator\",                        value = \"value\",                        flag_value = \"flag_value\",                        add = FALSE) |>   calculate_indices() #> # A tibble: 4 × 2 #>   index                        values #>   <chr>                         <dbl> #> 1 Government Response Index      57.2 #> 2 Containment and Health Index   52.9 #> 3 Stringency Index               44.0 #> 4 Economic Support Index         87.5"},{"path":"https://oxford-ihtm.io/oxcgrt/articles/retrieve.html","id":"stringency-index-by-country-over-time","dir":"Articles","previous_headings":"","what":"Stringency index by country over time","title":"Retrieve data via OxCGRT API","text":"first API endpoint provides JSON countries included OxCGRT specified period time:  https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/date-range/{start-date}/{end-date}  start-date end-date starting date ending date (YYYY-MM-DD format) respectively retrieve data. oxcgrt package provides function named get_json_time interface API retrieve specified JSON function named get_data_time extract data specified JSON R tibble object. two functions designed can piped one . Hence retrieve stringency index data countries 1 June 2020 current date, following code can used: produces following output: Important note get_json_time, starting date (using argument) specified desired 1 June 2020 YYYY-MM-DD format. default argument (ending date) set current date using call Sys.Date() function. default, argument set 2 January 2020 (2020-01-02) earliest available data point stringency index. Therefore, retrieve data stringency index countries available time points current, following commands can issued: produces following output:","code":"get_json_time(from = \"2020-06-01\") |> get_data_time() #> # A tibble: 173,696 × 9 #>    date_value country_code country_name       confirmed deaths stringency_actual #>    <date>     <chr>        <chr>                  <int>  <int>             <dbl> #>  1 2020-06-01 ABW          Aruba                    101      3              57.4 #>  2 2020-06-01 AFG          Afghanistan            15836    269              84.3 #>  3 2020-06-01 AGO          Angola                    86      4              77.8 #>  4 2020-06-01 ALB          Albania                 1143     33              71.3 #>  5 2020-06-01 AND          Andorra                  765     51              42.6 #>  6 2020-06-01 ARE          United Arab Emira…     35192    266              72.2 #>  7 2020-06-01 ARG          Argentina              17415    556              90.7 #>  8 2020-06-01 AUS          Australia               7221    102              62.0 #>  9 2020-06-01 AUT          Austria                16642    741              53.7 #> 10 2020-06-01 AZE          Azerbaijan              5662     68              75.9 #> # ℹ 173,686 more rows #> # ℹ 3 more variables: stringency <dbl>, stringency_legacy <dbl>, #> #   stringency_legacy_disp <dbl> get_json_time() |> get_data_time() #> # A tibble: 201,480 × 9 #>    date_value country_code country_name       confirmed deaths stringency_actual #>    <date>     <chr>        <chr>                  <int>  <int>             <dbl> #>  1 2020-01-02 ABW          Aruba                      0      0                 0 #>  2 2020-01-02 AFG          Afghanistan                0      0                 0 #>  3 2020-01-02 AGO          Angola                     0      0                 0 #>  4 2020-01-02 ALB          Albania                    0      0                 0 #>  5 2020-01-02 AND          Andorra                    0      0                 0 #>  6 2020-01-02 ARE          United Arab Emira…         0      0                 0 #>  7 2020-01-02 ARG          Argentina                  0      0                 0 #>  8 2020-01-02 AUS          Australia                  0      0                 0 #>  9 2020-01-02 AUT          Austria                    0      0                 0 #> 10 2020-01-02 AZE          Azerbaijan                 0      0                 0 #> # ℹ 201,470 more rows #> # ℹ 3 more variables: stringency <dbl>, stringency_legacy <dbl>, #> #   stringency_legacy_disp <dbl>"},{"path":"https://oxford-ihtm.io/oxcgrt/articles/retrieve.html","id":"policy-actions-and-stringency-index-for-specific-country-on-a-specific-day","dir":"Articles","previous_headings":"Stringency index by country over time","what":"Policy actions and stringency index for specific country on a specific day","title":"Retrieve data via OxCGRT API","text":"second API endpoint provides JSON specific country included OxCGRT specified day:  https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/{country-code}/{date}  country-code ISO 3166-1 alpha-3 country code required country get data date date (YYYY-MM-DD format) retrieve data. oxcgrt package provides function named get_json_actions interface API retrieve specified JSON function named get_data extract data specified JSON named list R object. two functions designed can piped one . Hence retrieve policy actions stringency index data Afghanistan 1 June 2020, following code can used: produces following output: Important note output named list object containing tibble policy actions data tibble stringency index data specified country specified date.","code":"get_json_actions(ccode = \"AFG\",                   from = NULL,                   to = \"2020-06-01\") |>    get_data() #> $policyActions #> # A tibble: 23 × 9 #>    policy_type_code policy_type_display   policyvalue policyvalue_actual flagged #>    <chr>            <chr>                       <int>              <int> <lgl>   #>  1 C1               School closing                  3                  3 TRUE    #>  2 C2               Workplace closing               3                  3 FALSE   #>  3 C3               Cancel public events            2                  2 TRUE    #>  4 C4               Restrictions on gath…           4                  4 TRUE    #>  5 C5               Close public transpo…           2                  2 FALSE   #>  6 C6               Stay at home require…           2                  2 FALSE   #>  7 C7               Restrictions on inte…           2                  2 FALSE   #>  8 C8               International travel…           3                  3 NA      #>  9 E1               Income support                  0                  0 NA      #> 10 E2               Debt/contract relief            0                  0 NA      #> # ℹ 13 more rows #> # ℹ 4 more variables: is_general <lgl>, notes <chr>, #> #   flag_value_display_field <chr>, policy_value_display_field <chr> #>  #> $stringencyData #> # A tibble: 1 × 6 #>   date_value country_code confirmed deaths stringency_actual stringency #>   <chr>      <chr>            <int>  <int>             <dbl>      <dbl> #> 1 2020-06-01 AFG              15836    269              84.3       84.3"},{"path":"https://oxford-ihtm.io/oxcgrt/articles/retrieve.html","id":"policy-actions-for-specific-country-or-countries-on-a-specific-day-or-days","dir":"Articles","previous_headings":"Stringency index by country over time","what":"Policy actions for specific country or countries on a specific day or days","title":"Retrieve data via OxCGRT API","text":"also possible retrieve just policy actions data specific country multiple countries specific day multiple days. retrieve policy actions data Afghanistan 1 June 2020, following code can used: results : Important note output tibble just policy actions three additional columns added dataset - date_value, country_code, country_name - identify data coming specific date specific country. retrieve policy actions data multiple countries multiple days, get_data_actions functions can used shown : results : Important note output tibble just policy actions three additional columns added dataset - date_value, country_code, country_name - identify data coming specific date specific country.","code":"get_json_actions(ccode = \"AFG\",                   from = NULL,                   to = \"2020-06-01\") |>    get_data_action() #> # A tibble: 23 × 12 #>    date_value country_code country_name policy_type_code policy_type_display     #>    <date>     <chr>        <chr>        <chr>            <chr>                   #>  1 2020-06-01 AFG          Afghanistan  C1               School closing          #>  2 2020-06-01 AFG          Afghanistan  C2               Workplace closing       #>  3 2020-06-01 AFG          Afghanistan  C3               Cancel public events    #>  4 2020-06-01 AFG          Afghanistan  C4               Restrictions on gather… #>  5 2020-06-01 AFG          Afghanistan  C5               Close public transport  #>  6 2020-06-01 AFG          Afghanistan  C6               Stay at home requireme… #>  7 2020-06-01 AFG          Afghanistan  C7               Restrictions on intern… #>  8 2020-06-01 AFG          Afghanistan  C8               International travel c… #>  9 2020-06-01 AFG          Afghanistan  E1               Income support          #> 10 2020-06-01 AFG          Afghanistan  E2               Debt/contract relief    #> # ℹ 13 more rows #> # ℹ 7 more variables: policyvalue <int>, policyvalue_actual <int>, #> #   flagged <lgl>, is_general <lgl>, notes <chr>, #> #   flag_value_display_field <chr>, policy_value_display_field <chr> get_json_actions(ccode = c(\"AFG\", \"Philippines\"),                   from = \"2020-10-25\",                   to = \"2020-10-31\") |>    get_data_actions() #> # A tibble: 322 × 12 #>    date_value country_code country_name policy_type_code policy_type_display     #>    <date>     <chr>        <chr>        <chr>            <chr>                   #>  1 2020-10-25 AFG          Afghanistan  C1               School closing          #>  2 2020-10-25 AFG          Afghanistan  C2               Workplace closing       #>  3 2020-10-25 AFG          Afghanistan  C3               Cancel public events    #>  4 2020-10-25 AFG          Afghanistan  C4               Restrictions on gather… #>  5 2020-10-25 AFG          Afghanistan  C5               Close public transport  #>  6 2020-10-25 AFG          Afghanistan  C6               Stay at home requireme… #>  7 2020-10-25 AFG          Afghanistan  C7               Restrictions on intern… #>  8 2020-10-25 AFG          Afghanistan  C8               International travel c… #>  9 2020-10-25 AFG          Afghanistan  E1               Income support          #> 10 2020-10-25 AFG          Afghanistan  E2               Debt/contract relief    #> # ℹ 312 more rows #> # ℹ 7 more variables: policyvalue <int>, policyvalue_actual <int>, #> #   flagged <lgl>, is_general <lgl>, notes <chr>, #> #   flag_value_display_field <chr>, policy_value_display_field <chr>"},{"path":"https://oxford-ihtm.io/oxcgrt/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ernest Guevarra. Author, maintainer.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Guevarra E (2024). oxcgrt: Interface Oxford COVID-19 Government Response Tracker API. doi:10.5281/zenodo.4293648, R package version 0.2.0, https://oxford-ihtm.io/oxcgrt/.","code":"@Manual{,   title = {oxcgrt: An Interface to the Oxford COVID-19 Government Response Tracker API},   author = {Ernest Guevarra},   year = {2024},   note = {R package version 0.2.0},   url = {https://oxford-ihtm.io/oxcgrt/},   doi = {10.5281/zenodo.4293648}, }"},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"oxcgrt-an-interface-to-the-oxford-covid-19-government-response-tracker-api-","dir":"","previous_headings":"","what":"An Interface to the Oxford COVID-19 Government Response Tracker API","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"Oxford COVID-19 Government Response Tracker (OxCGRT) tracks compares worldwide government responses COVID-19 pandemic rigorously consistently. OxCGRT makes available systematic information consistent way, aiding require information access efficiently. package facilitates access OxCGRT data R users via version 2 API. package also includes functions calculate various OxCGRT indices R. package aimed R users use plan use OxCGRT data research academic purposes develop want develop metrics indices build OxCGRT approach.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"what-does-oxcgrt-do","dir":"","previous_headings":"","what":"What does oxcgrt do?","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"oxcgrt package two main sets functions : Retrieve OxCGRT data (get_* functions) via version 2 API; , Calculate various OxCGRT indicators, sub-indices indices (calculate_* functions). R packages provide access data OxCGRT. COVID19 package oxcovid19 package just two examples . However, packages provide access OxCGRT data data dumps time-series stringency index per country. knowledge, oxcgrt package R package currently provides interface available API querying retrieving data. Also, oxcgrt package provides functions calculate OxCGRT sub-indices indices based methodology. None R packages seen reviewed functionality.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"can install released version oxcgrt CRAN : development version GitHub :","code":"install.packages(\"oxcgrt\") if(!require(remotes)) install.packages(\"remotes\") remotes::install_github(\"como-ph/oxcgrt\")"},{"path":[]},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"the-oxcgrt-data-retrieval-workflow-via-api","dir":"","previous_headings":"Usage","what":"The oxcgrt data retrieval workflow via API","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"retrieve data functions based OxCGRT’s JSON API described . Two API endpoints provided: 1) endpoint JSON providing data stringency index country time; , 2) endpoint JSON providing data policy actions stringency index specific country specific day. endpoints, data retrieval workflow composed two steps: first creation appropriate API URL query; , second retrieval appropriate data per query data.frame structure usable R. workflow show code : results following: oxcgrt functions designed work pipe operators via magrittr package. steps shown can replicated using pipe operators follows: results output earlier workflow albeit sorted alphabetically country code: detailed examples retrieve data via OxCGRT API version 2, read Retrieve data via OxCGRT API.","code":"## Load oxcgrt package library(oxcgrt)  ## Step 1: Create the appropriate API URL query for time series data from  ## 1 June 2020 up to current day query <- get_json_time(from = \"2020-06-01\")  ## Step 2: Retrieve the data get_data_time(query) #> # A tibble: 173,696 × 9 #>    date_value country_code country_name       confirmed deaths stringency_actual #>    <date>     <chr>        <chr>                  <int>  <int>             <dbl> #>  1 2020-06-01 ABW          Aruba                    101      3              57.4 #>  2 2020-06-01 AFG          Afghanistan            15836    269              84.3 #>  3 2020-06-01 AGO          Angola                    86      4              77.8 #>  4 2020-06-01 ALB          Albania                 1143     33              71.3 #>  5 2020-06-01 AND          Andorra                  765     51              42.6 #>  6 2020-06-01 ARE          United Arab Emira…     35192    266              72.2 #>  7 2020-06-01 ARG          Argentina              17415    556              90.7 #>  8 2020-06-01 AUS          Australia               7221    102              62.0 #>  9 2020-06-01 AUT          Austria                16642    741              53.7 #> 10 2020-06-01 AZE          Azerbaijan              5662     68              75.9 #> # ℹ 173,686 more rows #> # ℹ 3 more variables: stringency <dbl>, stringency_legacy <dbl>, #> #   stringency_legacy_disp <dbl> ## Load magrittr package library(magrittr)  get_json_time(from = \"2020-06-01\") %>%    ## Step 1: Creat API URL query   get_data_time()                         ## Step 2: Retrieve data #> # A tibble: 173,696 × 9 #>    date_value country_code country_name       confirmed deaths stringency_actual #>    <date>     <chr>        <chr>                  <int>  <int>             <dbl> #>  1 2020-06-01 ABW          Aruba                    101      3              57.4 #>  2 2020-06-01 AFG          Afghanistan            15836    269              84.3 #>  3 2020-06-01 AGO          Angola                    86      4              77.8 #>  4 2020-06-01 ALB          Albania                 1143     33              71.3 #>  5 2020-06-01 AND          Andorra                  765     51              42.6 #>  6 2020-06-01 ARE          United Arab Emira…     35192    266              72.2 #>  7 2020-06-01 ARG          Argentina              17415    556              90.7 #>  8 2020-06-01 AUS          Australia               7221    102              62.0 #>  9 2020-06-01 AUT          Austria                16642    741              53.7 #> 10 2020-06-01 AZE          Azerbaijan              5662     68              75.9 #> # ℹ 173,686 more rows #> # ℹ 3 more variables: stringency <dbl>, stringency_legacy <dbl>, #> #   stringency_legacy_disp <dbl>"},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"the-oxcgrt-calculate-workflow","dir":"","previous_headings":"Usage","what":"The oxcgrt calculate workflow","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"calculate_* functions based OxCGRT’s methodology described . two sets calculate functions included oxcgrt. first calculates OxCGRT sub-indices second calculates four OxCGRT indices composed various combinations indicators used OxCGRT sub-indices indices. detailed examples calculate various OxCGRT sub-indices indices, read Calculate OxCGRT sub-indices indices.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"datasets","dir":"","previous_headings":"Usage","what":"Datasets","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"oxcgrt package comes helpful datasets serve guides facilitate usage interpretation OxCGRT data.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"codebook","dir":"","previous_headings":"Usage > Datasets","what":"Codebook","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"OxCGRT provides authoritative codebook found . oxcgrt package extracted tables documentation single codebook can serve handy convenient reference R user working OxCGRT data R. OxCGRT codebook can accessed follows: outputs codebook singular table tbl format shown : current oxcgrt package version includes OxCGRT codebook version 3.7 released 11 March 2022.","code":"codebook #> # A tibble: 47 × 6 #>    ID    Name                      Description Measurement Coding `Policy Group` #>    <chr> <chr>                     <chr>       <chr>       <chr>  <chr>          #>  1 C1    C1_School closing         \"Record cl… Ordinal sc… 0 - n… Containment a… #>  2 C1    C1_Flag                   \"\"          Binary fla… 0 - t… Containment a… #>  3 C2    C2_Workplace closing      \"Record cl… Ordinal sc… 0 - n… Containment a… #>  4 C2    C2_Flag                   \"\"          Binary fla… 0 - t… Containment a… #>  5 C3    C3_Cancel public events   \"Record ca… Ordinal sc… 0 - n… Containment a… #>  6 C3    C3_Flag                   \"\"          Binary fla… 0 - t… Containment a… #>  7 C4    C4_Restrictions on gathe… \"Record li… Ordinal sc… 0 - n… Containment a… #>  8 C4    C4_Flag                   \"\"          Binary fla… 0 - t… Containment a… #>  9 C5    C5_Close public transport \"Record cl… Ordinal sc… 0 - n… Containment a… #> 10 C5    C5_Flag                   \"\"          Binary fla… 0 - t… Containment a… #> # ℹ 37 more rows"},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"example-oxcgrt-indicators-dataset","dir":"","previous_headings":"Usage > Datasets","what":"Example OxCGRT indicators dataset","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"OxCGRT methodology document, example indicator dataset used demonstrate calculation per indicator sub-indices four main indices OxCGRT provides. example dataset made available table format oxcgrt package can accessed follows: outputs example data singular table tbl format shown : dataset used oxcgrt package test calculate_* functions demonstrating functions work. dataset can useful trying learn OxCGRT’s calculation methods R users learning use oxcgrt package calculate_* functions.","code":"indicatorData #> # A tibble: 16 × 6 #>    indicator value flag_value max_value  flag score #>    <chr>     <int>      <int>     <int> <int> <dbl> #>  1 C1            2          1         3     1  66.7 #>  2 C2           NA         NA         3     1   0   #>  3 C3            2          0         2     1  75   #>  4 C4            2          0         4     1  37.5 #>  5 C5            0         NA         2     1   0   #>  6 C6            1          0         3     1  16.7 #>  7 C7            1          1         2     1  50   #>  8 C8            3         NA         4     0  75   #>  9 E1            2          0         2     1  75   #> 10 E2            2         NA         2     0 100   #> 11 H1            2          0         2     1  75   #> 12 H2            3         NA         3     0 100   #> 13 H3            2         NA         2     0 100   #> 14 H6            2          0         4     1  37.5 #> 15 H7            2          1         5     1  40   #> 16 H8            2          1         3     1  66.7"},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"current version oxcgrt package experimental stability future development depend OxCGRT‘s current future development. OxCGRT continuous evolution given COVID-19 pandemic still -going various governments’ responses continuously changed /updated. OxCGRT also developing indices capture aspects governments’ responses yet covered current indices. oxcgrt package author maintainer commit ensuring current functions maintained /updated manner ensures backwards compatibility changes data structure /indices calculation implemented OxCGRT team. include maintaining arguments used current functions, maintaining functionality current functions, maintaining type outputs current functions. changes implemented OxCGRT team data structure /indices calculation require breaking syntax, functionality /outputs current functions, formal proper deprecation process implemented include proper detailed documentation changes potential impact current users.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"oxcgrt package independent development separate recognised approved OxCGRT team. author maintainer package affiliated OxCGRT committed ensure fidelity methods usage specified OxCGRT accuracy outputs described required OxCGRT. mistakes, problems issues functionality outputs oxcgrt including mistakes interpretation calculation sub-indices indices noted () author maintainer OxCGRT. Hence problems issues usage, functionality outputs oxcgrt package addressed directly author maintainer .","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"using oxcgrt package, please cite source OxCGRT data oxcgrt package . source OxCGRT data, following citation recommended: Hale, Thomas, Noam Angrist, Emily Cameron-Blake, Laura Hallas, Beatriz Kira, Saptarshi Majumdar, Anna Petherick, Toby Phillips, Helen Tatlow, Samuel Webster (2020). Oxford COVID-19 Government Response Tracker, Blavatnik School Government. oxcgrt package, suggested citation can obtained using call citation function follows:","code":"citation(\"oxcgrt\") #> To cite oxcgrt in publications use: #>  #>   Guevarra E (2024). _oxcgrt: An Interface to the Oxford COVID-19 #>   Government Response Tracker API_. doi:10.5281/zenodo.4293648 #>   <https://doi.org/10.5281/zenodo.4293648>, R package version 0.2.0, #>   <https://oxford-ihtm.io/oxcgrt/>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {oxcgrt: An Interface to the Oxford COVID-19 Government Response Tracker API}, #>     author = {Ernest Guevarra}, #>     year = {2024}, #>     note = {R package version 0.2.0}, #>     url = {https://oxford-ihtm.io/oxcgrt/}, #>     doi = {10.5281/zenodo.4293648}, #>   }"},{"path":"https://oxford-ihtm.io/oxcgrt/index.html","id":"community-guidelines","dir":"","previous_headings":"","what":"Community guidelines","title":"An Interface to the Oxford COVID-19 Government Response Tracker API","text":"Feedback, bug reports feature requests welcome; file issues seek support . like contribute package, please see contributing guidelines. project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate an OxCGRT index or indices — calculate_index","title":"Calculate an OxCGRT index or indices — calculate_index","text":"Calculate OxCGRT index indices","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate an OxCGRT index or indices — calculate_index","text":"","code":"calculate_index(df, codes, tolerance)  calculate_gov_response(df)  calculate_containment_health(df)  calculate_stringency(df)  calculate_economic_support(df)  calculate_indices(df)"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate an OxCGRT index or indices — calculate_index","text":"df data.frame produced call calculate_subindices(). codes vector policy type codes use index calculation. tolerance integer specifying number missing values index calculated reported.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate an OxCGRT index or indices — calculate_index","text":"numeric value mean subindex scores specified policy types. calculate_indices(), tibble calculated OxCGRT indices","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_index.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate an OxCGRT index or indices — calculate_index","text":"Ernest Guevarra based calculation methods Hale, Thomas, Noam Angrist, Emily Cameron-Blake, Laura Hallas, Beatriz Kira, Saptarshi Majumdar, Anna Petherick, Toby Phillips, Helen Tatlow, Samuel Webster (2020). Oxford COVID-19 Government Response Tracker, Blavatnik School Government.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate an OxCGRT index or indices — calculate_index","text":"","code":"## Get policy actions data for Afghanistan on 1 September 2020 x <- get_data(json = get_json_actions(ccode = \"AFG\",                                       from = NULL,                                       to = \"2020-09-01\"))  ## Calculate OxCGRT subindices y <- calculate_subindices(df = x$policyActions)  ## Calculate OxCGRT index calculate_index(df = y,                 codes = c(paste(\"C\", 1:8, sep = \"\"),                           paste(\"E\", 1:2, sep = \"\"),                           paste(\"H\", 1:3, sep = \"\"), \"H6\"),                 tolerance = 1) #> [1] 33.33333  ## Calculate OxCGRT government response index calculate_gov_response(df = y) #> [1] 35.41667  ## Calculate OxCGRT containment and health index calculate_containment_health(df = y) #> [1] 40.47619  ## Calculate OxCGRT stringency index calculate_stringency(df = y) #> [1] 28.7037  ## Calculate OxCGRT economic support index calculate_economic_support(df = y) #> [1] 0  ## Calculate all OxCGRT indices calculate_indices(df = y) #> # A tibble: 4 × 2 #>   index                        values #>   <chr>                         <dbl> #> 1 Government Response Index      35.4 #> 2 Containment and Health Index   40.5 #> 3 Stringency Index               28.7 #> 4 Economic Support Index          0"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_subindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate OxCGRT sub-index score for a single indicator — calculate_subindex","title":"Calculate OxCGRT sub-index score for a single indicator — calculate_subindex","text":"Calculate OxCGRT sub-index score single indicator Calculate OxCGRT sub-index scores indicators","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_subindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate OxCGRT sub-index score for a single indicator — calculate_subindex","text":"","code":"calculate_subindex(indicator_code, value, flag_value)  calculate_subindices(   df,   indicator_code = \"policy_type_code\",   value = \"policyvalue_actual\",   flag_value = \"flagged\",   add = TRUE )"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_subindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate OxCGRT sub-index score for a single indicator — calculate_subindex","text":"indicator_code character value specifying name variable df containing policy type codes. default, set policy_type_code variable name used OxCGRT API. value character value specifying name column df containing values ordinal scale assigned policy type. default, set policyvalue_actual variable name used OxCGRT API. flag_value character value specifying name column df containing flag values policy type. default, set flagged variable name used OxCGRT API. df data.frame containing per indicator values required calculating sub-index scores. data.frame structured similarly policy actions data.frame produced call get_data_actions(). add Logical. sub-indices indicator added df? Default TRUE.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_subindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate OxCGRT sub-index score for a single indicator — calculate_subindex","text":"numeric value 0 100. add TRUE (default), returns tibble composed input data.frame x added column named score calculated sub-indices. add FALSE, returns tibble 4 columns first column policy codes named policy_type_codes, second column policy values named policy_value, third column flag values named flag_value fourth column named score calculated sub-indices.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_subindex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate OxCGRT sub-index score for a single indicator — calculate_subindex","text":"Ernest Guevarra based calculation methods Hale, Thomas, Noam Angrist, Emily Cameron-Blake, Laura Hallas, Beatriz Kira, Saptarshi Majumdar, Anna Petherick, Toby Phillips, Helen Tatlow, Samuel Webster (2020). Oxford COVID-19 Government Response Tracker, Blavatnik School Government.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/calculate_subindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate OxCGRT sub-index score for a single indicator — calculate_subindex","text":"","code":"calculate_subindex(indicator_code = indicatorData$indicator[1],                    value = indicatorData$value[1],                    flag_value = indicatorData$flag_value[1]) #> [1] 66.66667  x <- get_data(json = get_json_actions(ccode = \"AFG\",                                       from = NULL,                                       to = \"2020-09-01\")) calculate_subindices(df = x$policyActions) #> # A tibble: 23 × 10 #>    policy_type_code policy_type_display   policyvalue policyvalue_actual flagged #>    <chr>            <chr>                       <int>              <int> <lgl>   #>  1 C1               School closing                  2                  2 TRUE    #>  2 C2               Workplace closing               2                  2 TRUE    #>  3 C3               Cancel public events            0                  0 NA      #>  4 C4               Restrictions on gath…           0                  0 NA      #>  5 C5               Close public transpo…           0                  0 NA      #>  6 C6               Stay at home require…           0                  0 NA      #>  7 C7               Restrictions on inte…           0                  0 NA      #>  8 C8               International travel…           1                  1 NA      #>  9 E1               Income support                  0                  0 NA      #> 10 E2               Debt/contract relief            0                  0 NA      #> # ℹ 13 more rows #> # ℹ 5 more variables: is_general <lgl>, notes <chr>, #> #   flag_value_display_field <chr>, policy_value_display_field <chr>, #> #   score <dbl>"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Codebook for the Oxford COVID-19 Government Response Tracker — codebook","title":"Codebook for the Oxford COVID-19 Government Response Tracker — codebook","text":"Codebook Oxford COVID-19 Government Response Tracker","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Codebook for the Oxford COVID-19 Government Response Tracker — codebook","text":"","code":"codebook"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/codebook.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Codebook for the Oxford COVID-19 Government Response Tracker — codebook","text":"tibble 47 rows 6 columns:","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/codebook.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Codebook for the Oxford COVID-19 Government Response Tracker — codebook","text":"https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/codebook.md","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get policy actions and stringency data from JSON — get_data","title":"Get policy actions and stringency data from JSON — get_data","text":"Get policy actions stringency data JSON","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get policy actions and stringency data from JSON — get_data","text":"","code":"get_data(json)"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get policy actions and stringency data from JSON — get_data","text":"json JSON string, URL file created using get_json_time() get_json_actions().","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get policy actions and stringency data from JSON — get_data","text":"tibble time series stringency index data json time series endpoint named list two tibbles (first tibble named policyActions second tibble named stringencyData) json policy actions endpoint.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get policy actions and stringency data from JSON — get_data","text":"","code":"## Get time series JSON endpoint x <- get_json_time(from = \"2020-10-29\", to = \"2020-10-31\")  ## Get time series stringency index data get_data(x) #> # A tibble: 552 × 8 #>    date_value country_code confirmed deaths stringency_actual stringency #>    <date>     <chr>            <int>  <int>             <dbl>      <dbl> #>  1 2020-10-29 ABW               4472     37             47.2       47.2  #>  2 2020-10-29 AFG              41145   1529              9.26       9.26 #>  3 2020-10-29 AGO              10269    275             65.7       65.7  #>  4 2020-10-29 ALB              20315    499             54.6       54.6  #>  5 2020-10-29 AND               4567     73             55.6       55.6  #>  6 2020-10-29 ARE             130336    488             54.6       54.6  #>  7 2020-10-29 ARG            1143800  30442             81.9       81.9  #>  8 2020-10-29 AUS              27579    907             60.6       60.6  #>  9 2020-10-29 AUT              91951   1353             64.8       64.8  #> 10 2020-10-29 AZE              53152    708             64.4       64.4  #> # ℹ 542 more rows #> # ℹ 2 more variables: stringency_legacy <dbl>, stringency_legacy_disp <dbl>  ## Get policy actions JSON endpoint x <- get_json_actions(ccode = \"AFG\", from = NULL, to = \"2020-07-16\")  ## Get data on policy actions and stringency index get_data(x) #> $policyActions #> # A tibble: 23 × 9 #>    policy_type_code policy_type_display   policyvalue policyvalue_actual flagged #>    <chr>            <chr>                       <int>              <int> <lgl>   #>  1 C1               School closing                  3                  3 TRUE    #>  2 C2               Workplace closing               3                  3 FALSE   #>  3 C3               Cancel public events            2                  2 TRUE    #>  4 C4               Restrictions on gath…           4                  4 TRUE    #>  5 C5               Close public transpo…           2                  2 FALSE   #>  6 C6               Stay at home require…           2                  2 FALSE   #>  7 C7               Restrictions on inte…           2                  2 FALSE   #>  8 C8               International travel…           1                  1 NA      #>  9 E1               Income support                  0                  0 NA      #> 10 E2               Debt/contract relief            0                  0 NA      #> # ℹ 13 more rows #> # ℹ 4 more variables: is_general <lgl>, notes <chr>, #> #   flag_value_display_field <chr>, policy_value_display_field <chr> #>  #> $stringencyData #> # A tibble: 1 × 6 #>   date_value country_code confirmed deaths stringency_actual stringency #>   <chr>      <chr>            <int>  <int>             <dbl>      <dbl> #> 1 2020-07-16 AFG              35156   1117              78.7       78.7 #>"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Get policy actions data from JSON — get_data_action","title":"Get policy actions data from JSON — get_data_action","text":"Get policy actions data JSON","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get policy actions data from JSON — get_data_action","text":"","code":"get_data_action(json)  get_data_actions(json)"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get policy actions data from JSON — get_data_action","text":"json JSON string, URL file created using get_json_actions() vector JSON strings URLs.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data_action.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get policy actions data from JSON — get_data_action","text":"tibble policy actions respective policy values specified country/countries specified date/dates.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data_action.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get policy actions data from JSON — get_data_action","text":"","code":"## Get relevant JSON for Afghanistan on 16 July 2020 x <- get_json_actions(ccode = \"AFG\", from = NULL, to = \"2020-07-16\")  ## Get data on policy actions get_data_action(x) #> # A tibble: 23 × 12 #>    date_value country_code country_name policy_type_code policy_type_display     #>    <date>     <chr>        <chr>        <chr>            <chr>                   #>  1 2020-07-16 AFG          Afghanistan  C1               School closing          #>  2 2020-07-16 AFG          Afghanistan  C2               Workplace closing       #>  3 2020-07-16 AFG          Afghanistan  C3               Cancel public events    #>  4 2020-07-16 AFG          Afghanistan  C4               Restrictions on gather… #>  5 2020-07-16 AFG          Afghanistan  C5               Close public transport  #>  6 2020-07-16 AFG          Afghanistan  C6               Stay at home requireme… #>  7 2020-07-16 AFG          Afghanistan  C7               Restrictions on intern… #>  8 2020-07-16 AFG          Afghanistan  C8               International travel c… #>  9 2020-07-16 AFG          Afghanistan  E1               Income support          #> 10 2020-07-16 AFG          Afghanistan  E2               Debt/contract relief    #> # ℹ 13 more rows #> # ℹ 7 more variables: policyvalue <int>, policyvalue_actual <int>, #> #   flagged <lgl>, is_general <lgl>, notes <chr>, #> #   flag_value_display_field <chr>, policy_value_display_field <chr>  ## Get relevant JSON for Afghanistan and Philippines for whole month of ## October x <- get_json_actions(ccode = c(\"AFG\", \"PH\"),                       from = \"2020-10-29\",                       to = \"2020-10-30\")  ## Get data on policy actions get_data_actions(x) #> # A tibble: 92 × 12 #>    date_value country_code country_name policy_type_code policy_type_display     #>    <date>     <chr>        <chr>        <chr>            <chr>                   #>  1 2020-10-29 AFG          Afghanistan  C1               School closing          #>  2 2020-10-29 AFG          Afghanistan  C2               Workplace closing       #>  3 2020-10-29 AFG          Afghanistan  C3               Cancel public events    #>  4 2020-10-29 AFG          Afghanistan  C4               Restrictions on gather… #>  5 2020-10-29 AFG          Afghanistan  C5               Close public transport  #>  6 2020-10-29 AFG          Afghanistan  C6               Stay at home requireme… #>  7 2020-10-29 AFG          Afghanistan  C7               Restrictions on intern… #>  8 2020-10-29 AFG          Afghanistan  C8               International travel c… #>  9 2020-10-29 AFG          Afghanistan  E1               Income support          #> 10 2020-10-29 AFG          Afghanistan  E2               Debt/contract relief    #> # ℹ 82 more rows #> # ℹ 7 more variables: policyvalue <int>, policyvalue_actual <int>, #> #   flagged <lgl>, is_general <lgl>, notes <chr>, #> #   flag_value_display_field <chr>, policy_value_display_field <chr>"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Get time series stringency index data from JSON — get_data_time","title":"Get time series stringency index data from JSON — get_data_time","text":"Get time series stringency index data JSON","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get time series stringency index data from JSON — get_data_time","text":"","code":"get_data_time(json)"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get time series stringency index data from JSON — get_data_time","text":"json JSON string, URL file created using get_json_time()","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get time series stringency index data from JSON — get_data_time","text":"tibble time series stringency index data","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_data_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get time series stringency index data from JSON — get_data_time","text":"","code":"x <- get_json_time(from = \"2020-07-18\", to = \"2020-07-20\")  get_data_time(x) #> # A tibble: 552 × 9 #>    date_value country_code country_name       confirmed deaths stringency_actual #>    <date>     <chr>        <chr>                  <int>  <int>             <dbl> #>  1 2020-07-18 ABW          Aruba                    111      3              47.2 #>  2 2020-07-18 AFG          Afghanistan            35375   1151              78.7 #>  3 2020-07-18 AGO          Angola                   687     29              76.4 #>  4 2020-07-18 ALB          Albania                 4008    111              63.0 #>  5 2020-07-18 AND          Andorra                  880     52              41.7 #>  6 2020-07-18 ARE          United Arab Emira…     56711    338              56.5 #>  7 2020-07-18 ARG          Argentina             122524   2220              92.6 #>  8 2020-07-18 AUS          Australia              11802    122              68.1 #>  9 2020-07-18 AUT          Austria                19358    831              38.0 #> 10 2020-07-18 AZE          Azerbaijan             27133    349              96.3 #> # ℹ 542 more rows #> # ℹ 3 more variables: stringency <dbl>, stringency_legacy <dbl>, #> #   stringency_legacy_disp <dbl>"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Get JSON for OxCGRT data — get_json_time","title":"Get JSON for OxCGRT data — get_json_time","text":"Get JSON OxCGRT data","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get JSON for OxCGRT data — get_json_time","text":"","code":"get_json_time(from = \"2020-01-02\", to = Sys.Date())  get_json_actions(ccode, from = \"2020-01-02\", to = Sys.Date())"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get JSON for OxCGRT data — get_json_time","text":"Start date stringency index data collected. can go far back 2020-01-02 (Default). Format YYYY-MM-DD. Accepts either character string date class. End date stringency index data collected. defaults current date. Format YYYY-MM-DD. Accepts either character string date class. ccode ISO 3166-1 alpha-2 country code, alpha-3 country code, full country name string vector strings (mix alpha-2 code alpha-3 code country names valid).","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get JSON for OxCGRT data — get_json_time","text":"character object specified JSON time series endpoint, character string character vector specified JSON policy actions endpoint endpoints.","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_json.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get JSON for OxCGRT data — get_json_time","text":"Ernest Guevarra","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/get_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get JSON for OxCGRT data — get_json_time","text":"","code":"## Get JSON for Afghanistan at 7 days previous to current date get_json_actions(ccode = \"AFG\",                  from = NULL,                  to = as.character(Sys.Date() - 7)) #> [1] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2024-03-31\"  ## Get JSON for Afghanistan and Philippines from 1 October to 31 October 2020 get_json_actions(ccode = c(\"Afghanistan\", \"PH\"),                  from = \"2020-10-01\", to = \"2020-10-31\") #>  [1] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-01\" #>  [2] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-02\" #>  [3] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-03\" #>  [4] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-04\" #>  [5] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-05\" #>  [6] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-06\" #>  [7] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-07\" #>  [8] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-08\" #>  [9] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-09\" #> [10] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-10\" #> [11] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-11\" #> [12] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-12\" #> [13] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-13\" #> [14] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-14\" #> [15] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-15\" #> [16] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-16\" #> [17] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-17\" #> [18] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-18\" #> [19] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-19\" #> [20] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-20\" #> [21] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-21\" #> [22] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-22\" #> [23] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-23\" #> [24] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-24\" #> [25] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-25\" #> [26] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-26\" #> [27] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-27\" #> [28] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-28\" #> [29] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-29\" #> [30] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-30\" #> [31] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/AFG/2020-10-31\" #> [32] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-01\" #> [33] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-02\" #> [34] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-03\" #> [35] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-04\" #> [36] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-05\" #> [37] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-06\" #> [38] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-07\" #> [39] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-08\" #> [40] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-09\" #> [41] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-10\" #> [42] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-11\" #> [43] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-12\" #> [44] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-13\" #> [45] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-14\" #> [46] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-15\" #> [47] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-16\" #> [48] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-17\" #> [49] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-18\" #> [50] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-19\" #> [51] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-20\" #> [52] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-21\" #> [53] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-22\" #> [54] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-23\" #> [55] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-24\" #> [56] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-25\" #> [57] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-26\" #> [58] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-27\" #> [59] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-28\" #> [60] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-29\" #> [61] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-30\" #> [62] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/actions/PHL/2020-10-31\"  ## Get JSON time series endpoint for all data available from OxCGRT get_json_time() #> [1] \"https://covidtrackerapi.bsg.ox.ac.uk/api/v2/stringency/date-range/2020-01-02/2024-04-07\""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/indicatorData.html","id":null,"dir":"Reference","previous_headings":"","what":"Example indicator data for sub-index calculations — indicatorData","title":"Example indicator data for sub-index calculations — indicatorData","text":"Example indicator data sub-index calculations","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/indicatorData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example indicator data for sub-index calculations — indicatorData","text":"","code":"indicatorData"},{"path":"https://oxford-ihtm.io/oxcgrt/reference/indicatorData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example indicator data for sub-index calculations — indicatorData","text":"tibble 16 rows 6 columns","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/indicatorData.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example indicator data for sub-index calculations — indicatorData","text":"https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/reference/oxcgrt.html","id":null,"dir":"Reference","previous_headings":"","what":"An Interface to the Oxford COVID-19 Government Response Tracker API — oxcgrt","title":"An Interface to the Oxford COVID-19 Government Response Tracker API — oxcgrt","text":"Oxford COVID-19 Government Response Tracker (OxCGRT) tracks compares worldwide government responses COVID-19 pandemic rigorously consistently. OxCGRT makes available systematic information consistent way, aiding require information access efficiently purposes. package facilitates access OxCGRT data via API R users.","code":""},{"path":[]},{"path":"https://oxford-ihtm.io/oxcgrt/reference/oxcgrt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An Interface to the Oxford COVID-19 Government Response Tracker API — oxcgrt","text":"Maintainer: Ernest Guevarra ernest@guevarra.io (ORCID)","code":""},{"path":[]},{"path":"https://oxford-ihtm.io/oxcgrt/news/index.html","id":"fix-bugs-0-2-0","dir":"Changelog","previous_headings":"","what":"Fix bugs","title":"oxcgrt 0.2.0.","text":"Addressed CRAN errors resulting internet available checking internet availability accessing JSON endpoint Addressed CRAN errors resulting API accessible checking whether JSON endpoint errors attempting data retrieval","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/news/index.html","id":"oxcgrt-010","dir":"Changelog","previous_headings":"","what":"oxcgrt 0.1.0","title":"oxcgrt 0.1.0","text":"CRAN release: 2020-11-27","code":""},{"path":"https://oxford-ihtm.io/oxcgrt/news/index.html","id":"features-0-1-0","dir":"Changelog","previous_headings":"","what":"Features","title":"oxcgrt 0.1.0","text":"Functions retrieve JSON OxCGRT API Functions extract OxCGRT data JSON Functions calculate OxCGRT sub-indices Functions calculate OxCGRT indices OxCGRT codebook included dataset","code":""}]
